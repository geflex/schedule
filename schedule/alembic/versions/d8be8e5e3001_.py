"""empty message

Revision ID: d8be8e5e3001
Revises: 8d4d346bb327
Create Date: 2020-11-19 22:11:38.468991

"""
import pathlib
import sys; sys.path.append(str(pathlib.Path().absolute()))
from alembic import op
import sqlalchemy as sa
import sqlalchemy.orm


# revision identifiers, used by Alembic.
revision = 'd8be8e5e3001'
down_revision = '8d4d346bb327'
branch_labels = None
depends_on = None


connection = op.get_bind()
session = sa.orm.sessionmaker(bind=connection)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'groups', ['name'])
    op.create_unique_constraint(None, 'buildings', ['name'])

    op.add_column('lessons', sa.Column('group_names', sa.String(), nullable=True))
    op.drop_constraint('lessons_group_ids_fkey', 'lessons', type_='foreignkey')
    op.create_foreign_key(None, 'lessons', 'groups', ['group_names'], ['name'])
    op.drop_column('lessons', 'group_ids')

    op.add_column('users', sa.Column('group_name', sa.String(), nullable=True))
    op.drop_constraint('users_group_id_fkey', 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'groups', ['group_name'], ['name'])
    op.drop_column('users', 'group_id')

    op.add_column('places', sa.Column('building_name', sa.String(), nullable=True))
    op.drop_constraint('places_building_id_fkey', 'places', type_='foreignkey')
    op.create_foreign_key(None, 'places', 'buildings', ['building_name'], ['name'])
    op.drop_column('places', 'building_id')

    op.drop_column('buildings', 'id')
    op.drop_column('groups', 'id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key('users_group_id_fkey', 'users', 'groups', ['group_id'], ['id'])
    op.drop_column('users', 'group_name')
    op.add_column('places', sa.Column('building_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'places', type_='foreignkey')
    op.create_foreign_key('places_building_id_fkey', 'places', 'buildings', ['building_id'], ['id'])
    op.drop_column('places', 'building_name')
    op.add_column('lessons', sa.Column('group_ids', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'lessons', type_='foreignkey')
    op.create_foreign_key('lessons_group_ids_fkey', 'lessons', 'groups', ['group_ids'], ['id'])
    op.drop_column('lessons', 'group_names')
    op.add_column('groups', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('group_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.add_column('buildings', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('buildings_id_seq'::regclass)"), autoincrement=True, nullable=False))
    # ### end Alembic commands ###
